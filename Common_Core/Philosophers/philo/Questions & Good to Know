x - How large may the arguments be? Larger than INT_MAX? --> no larger than INT_MAX --> change minimum to 1
x - Check for different kinds of inputs like "          +77$%" --> NO
x - Is there a minimum time? (Like 60 ms?) YES, but no checker necessary
x - odd philos take left fork first, even philos take right fork first
x - have routine functions in create_threads
x - join all threads at end of program
x - have mutex_lock within print_status so that there is not word scramble
x - also print when somebody takes a fork
x - use Marians script to count meals
x - EXIT IS FORBIDDEN!!
x - There should be a mutex to prevent a philo from starting to eat and dying at the same time
x - the program should stop when there is only one philo and he dies
x - one philo should die for "./philo 2 400 200 200"
x - mutex lock for error messages needed
x - take care of letters at end of numbers
x - put compiler messages Makefile
- why does my program, when successful not work with valgrind?
- dies but shouldn't: ./philo 18 180 85 85 10

Test results:

PRE-TEST ---------------------------------------------------------->

Make: OK

Norminette: OK

Global Var: 0

DEATH TEST -------------------------------------------------------->
- One philo -

TEST 0: OK

TEST 1: OK

TEST 2: OK

TEST 3: OK

TEST 4: OK

DEATH TEST -------------------------------------------------------->
- No one must die -

TEST 0: OK

TEST 1: OK

TEST 2: OK

TEST 3: OK

TEST 4: KO

    No philosopher should die.

    ARGS: 18 180 85 85 10

TEST 5: OK

TEST 6: OK

TEST 7: OK

TEST 8: OK

TEST 9: OK

DEATH TEST -------------------------------------------------------->
- One must die -

TEST 0: OK

TEST 1: OK

TEST 2: OK

TEST 3: OK

TEST 4: OK

TEST 5: OK

TEST 6: OK

TEST 7: OK

TEST 8: OK

TEST 9: OK

VALGRIND ---------------------------------------------------------->
--tool=memcheck -

TEST 0: OK

TEST 1: OK

TEST 2: OK

TEST 3: OK

TEST 4: OK

TEST 5: OK

TEST 6: OK

TEST 7: OK

TEST 8: OK

TEST 9: OK

VALGRIND ---------------------------------------------------------->
--tool=helgrind -

TEST 0: OK

TEST 1: OK

TEST 2: KO

    ==26978== ERROR SUMMARY: 46 errors from 9 contexts (suppressed: 29901 from 69)

    ARGS: 8 180 85 85 10

TEST 3: KO

    ==26988== ERROR SUMMARY: 147 errors from 9 contexts (suppressed: 25712 from 73)

    ARGS: 18 180 85 85 10

TEST 4: KO

    ==27008== ERROR SUMMARY: 14 errors from 10 contexts (suppressed: 28665 from 71)

    ARGS: 3 210 65 135 10

TEST 5: KO

    ==27013== ERROR SUMMARY: 9 errors from 8 contexts (suppressed: 26792 from 74)

    ARGS: 3 210 60 145 10

TEST 6: KO

    ==27029== ERROR SUMMARY: 11 errors from 10 contexts (suppressed: 24363 from 71)

    ARGS: 3 180 89 89 2

TEST 7: KO

    ==27040== ERROR SUMMARY: 26 errors from 10 contexts (suppressed: 27530 from 80)

    ARGS: 5 180 180 60 2

TEST 8: KO

    ==27047== ERROR SUMMARY: 39 errors from 10 contexts (suppressed: 16497 from 80)

    ARGS: 7 120 60 60 2

TEST 9: KO

    ==27056== ERROR SUMMARY: 11 errors from 10 contexts (suppressed: 123567 from 71)

    ARGS: 3 800 300 60 2

ThreadSanitizer --------------------------------------------------->

TEST 0: OK

TEST 1: OK

TEST 2: OK

TEST 3: OK

TEST 4: OK

TEST 5: OK

TEST 6: OK

TEST 7: OK

TEST 8: OK

TEST 9: OK